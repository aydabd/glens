package reporter

import (
	"fmt"
	"html"
	"strings"
	"time"
)

// generateHTMLReport creates a simple HTML formatted report
func generateHTMLReportSimple(report *Report) (string, error) {
	var htmlBuilder strings.Builder

	// HTML header
	htmlBuilder.WriteString(`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OpenAPI Integration Test Report</title>
    <style>
        body { font-family: system-ui, sans-serif; margin: 40px; line-height: 1.6; }
        table { border-collapse: collapse; width: 100%; margin: 20px 0; }
        th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
        th { background-color: #f2f2f2; }
        h1, h2, h3 { color: #333; }
    </style>
</head>
<body>`)

	// Header
	htmlBuilder.WriteString("<h1>ðŸ“Š OpenAPI Integration Test Report</h1>\n")
	htmlBuilder.WriteString(fmt.Sprintf("<p><strong>Generated:</strong> %s</p>\n", report.GeneratedAt.Format(time.RFC3339)))
	htmlBuilder.WriteString(fmt.Sprintf("<p><strong>Execution Time:</strong> %s</p>\n", report.ExecutionTime))
	htmlBuilder.WriteString(fmt.Sprintf("<p><strong>API:</strong> %s v%s</p>\n",
		html.EscapeString(report.Specification.Info.Title),
		html.EscapeString(report.Specification.Info.Version)))

	// Summary
	htmlBuilder.WriteString("<h2>ðŸ“ˆ Summary</h2>\n")
	htmlBuilder.WriteString("<table>\n")
	htmlBuilder.WriteString("<tr><th>Metric</th><th>Value</th></tr>\n")
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Total Endpoints</td><td>%d</td></tr>\n", report.Summary.TotalEndpoints))
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Endpoints Processed</td><td>%d</td></tr>\n", report.Summary.EndpointsProcessed))
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Total Tests</td><td>%d</td></tr>\n", report.Summary.TotalTests))
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Tests Passed</td><td>%d</td></tr>\n", report.Summary.PassedTests))
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Tests Failed</td><td>%d</td></tr>\n", report.Summary.FailedTests))
	htmlBuilder.WriteString(fmt.Sprintf("<tr><td>Overall Health Score</td><td>%.1f%%</td></tr>\n", report.Summary.OverallHealthScore))
	htmlBuilder.WriteString("</table>\n")

	// Footer
	htmlBuilder.WriteString("<p><em>This report was automatically generated by Glens</em></p>")
	htmlBuilder.WriteString("</body></html>")

	return htmlBuilder.String(), nil
}
